"""
The psycopg2 integration traces Postgres queries.


Enabling
~~~~~~~~

The gRPC integration is enabled automatically when using
:ref:`ddtrace-run<ddtracerun>` or :ref:`patch_all()<patch_all>`.

Or use :ref:`patch()<patch>` to manually enable the integration::

    from ddtrace import patch

    patch(psycopg=True)


Global Configuration
~~~~~~~~~~~~~~~~~~~~


.. py:data:: ddtrace.config.psycopg2["service"]

    The service name used by default on traces generated by the integration.

    This option can also be set with the DD_PSYCOPG2_SERVICE environment
    variable.

    Default: ``"postgres"``


Instance Configuration
~~~~~~~~~~~~~~~~~~~~~~

    To change the service name of a particular psycopg2 connection

    db = psycopg2.connect(connection_factory=factory)

    # Use a pin to specify metadata related to this connection
    Pin.override(db, service='postgres-users')
"""
from ...utils.importlib import require_modules


required_modules = ['psycopg2']

with require_modules(required_modules) as missing_modules:
    if not missing_modules:
        from .connection import connection_factory
        from .patch import patch, patch_conn

        __all__ = ['connection_factory', 'patch', 'patch_conn']
